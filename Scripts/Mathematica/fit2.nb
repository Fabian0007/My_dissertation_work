(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25148,        521]
NotebookOptionsPosition[     24757,        503]
NotebookOutlinePosition[     25092,        518]
CellTagsIndexPosition[     25049,        515]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"dataPublicationsCurve", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\</home/fabianact/newTest/ModeloConAcumulaciondoble/test0/testTables/\
publications15-1-1-curve.csv\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fitFkt", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"dataPublicationsCurve", ",", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"a", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "b"}], " ", "x"}], "]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitFkt", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<BestFit\>\"", ",", "\"\<ParameterTable\>\""}], "}"}], "]"}], 
  ";"}], "\n", 
 RowBox[{"R2", "=", 
  RowBox[{
  "fitFkt", "[", "\"\<AdjustedRSquared\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataPublicationsCurve", ",", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Ticks\>\"", ",", "\"\<Publications\>\""}], "}"}]}], ",",
        " ", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<R2: \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "R2", "]"}]}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"fitFkt", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"Length", "[", "dataPublicationsCurve", "]"}]}], "}"}], ",", 
       "  ", 
       RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotTotal", " ", "=", " ", 
  RowBox[{"Legended", "[", 
   RowBox[{"plot", ",", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Logistic model\>\"", ",", "\"\<Results\>\""}], "}"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<fitLogistic.png\>\"", ",", "plotTotal"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6959879411708183`*^9, 3.6959879594904947`*^9}, {
   3.6959885189871693`*^9, 3.695988530050885*^9}, {3.6959886109086533`*^9, 
   3.695988638571149*^9}, 3.696101129464867*^9, {3.696103397961102*^9, 
   3.696103438450968*^9}, {3.69610350766678*^9, 3.69610351526786*^9}, {
   3.696103645282484*^9, 3.696103647507125*^9}, {3.696103770611032*^9, 
   3.69610386426547*^9}, {3.6961044503634157`*^9, 3.696104456914513*^9}, 
   3.6961052496069403`*^9, {3.696515159961652*^9, 3.696515236441347*^9}, {
   3.696515307292369*^9, 3.696515386513051*^9}, {3.698546353384651*^9, 
   3.698546354183687*^9}, 3.69854640650386*^9, 3.698546453186426*^9, 
   3.698546521841694*^9, {3.6985466134157877`*^9, 3.698546616019497*^9}, 
   3.6985467518211803`*^9, 3.698546786273089*^9, 3.698546840526865*^9, {
   3.698547813124277*^9, 3.698547834286663*^9}, 3.6985478864321537`*^9, {
   3.69854795371323*^9, 3.698547955493614*^9}, 3.6985482244686623`*^9, {
   3.699847392173539*^9, 3.699847430037095*^9}, {3.6999246323740253`*^9, 
   3.699924644947652*^9}, {3.699924762033627*^9, 3.6999247684404163`*^9}, {
   3.699924864625452*^9, 3.6999248652633333`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      FractionBox["1023.7990309355656`", 
       RowBox[{"1", "+", 
        RowBox[{"39.999263173767226`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "0.3521391009692439`"}], " ", "x"}]]}]}]],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 39.999263173767226`, $CellContext`b -> 
      0.3521391009692439, $CellContext`c -> 
      1023.7990309355656`}, {{$CellContext`x}, $CellContext`c/(
      1 + $CellContext`a E^(-$CellContext`b $CellContext`x))}}, {1}, {{0, 
    0}, {1, 10}, {2, 34}, {3, 62}, {4, 99}, {5, 155}, {6, 191}, {7, 258}, {8, 
    321}, {9, 385}, {10, 452}, {11, 534}, {12, 615}, {13, 712}, {14, 802}, {
    15, 862}, {16, 912}, {17, 951}, {18, 974}, {19, 988}, {20, 1001}, {21, 
    1006}, {22, 1011}, {23, 1011}, {24, 1012}, {25, 1013}, {26, 1014}, {27, 
    1014}, {28, 1014}, {29, 1014}, {30, 1016}, {31, 1016}, {32, 1016}, {33, 
    1016}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.695987321540473*^9, 3.69598796009873*^9, 3.695988530612331*^9, {
   3.696103434783105*^9, 3.696103438891479*^9}, {3.6961035087053337`*^9, 
   3.696103523984787*^9}, {3.696103645731916*^9, 3.696103648217065*^9}, {
   3.696103772232546*^9, 3.696103832569757*^9}, 3.6961038652457848`*^9, {
   3.6961044519674597`*^9, 3.6961044585811787`*^9}, 3.6961052509965687`*^9, {
   3.696515173915175*^9, 3.696515194276422*^9}, 3.696515237914805*^9, 
   3.6965153083787937`*^9, {3.696515381207637*^9, 3.696515387397107*^9}, 
   3.698546409125594*^9, 3.698546453992484*^9, 3.6985466317823353`*^9, 
   3.698546756158476*^9, 3.6985467869785633`*^9, 3.6985468410367804`*^9, {
   3.698547867757518*^9, 3.698547887322921*^9}, 3.698547957250279*^9, 
   3.69854822575031*^9, {3.699847414510497*^9, 3.699847431731328*^9}, {
   3.699924626844795*^9, 3.6999246465926313`*^9}, 3.6999247744914303`*^9, 
   3.699924870263088*^9, 3.699924911998803*^9}],

Cell[BoxData["0.9996111750222102`"], "Output",
 CellChangeTimes->{
  3.695987321540473*^9, 3.69598796009873*^9, 3.695988530612331*^9, {
   3.696103434783105*^9, 3.696103438891479*^9}, {3.6961035087053337`*^9, 
   3.696103523984787*^9}, {3.696103645731916*^9, 3.696103648217065*^9}, {
   3.696103772232546*^9, 3.696103832569757*^9}, 3.6961038652457848`*^9, {
   3.6961044519674597`*^9, 3.6961044585811787`*^9}, 3.6961052509965687`*^9, {
   3.696515173915175*^9, 3.696515194276422*^9}, 3.696515237914805*^9, 
   3.6965153083787937`*^9, {3.696515381207637*^9, 3.696515387397107*^9}, 
   3.698546409125594*^9, 3.698546453992484*^9, 3.6985466317823353`*^9, 
   3.698546756158476*^9, 3.6985467869785633`*^9, 3.6985468410367804`*^9, {
   3.698547867757518*^9, 3.698547887322921*^9}, 3.698547957250279*^9, 
   3.69854822575031*^9, {3.699847414510497*^9, 3.699847431731328*^9}, {
   3.699924626844795*^9, 3.6999246465926313`*^9}, 3.6999247744914303`*^9, 
   3.699924870263088*^9, 3.6999249120109167`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxtz7sKwjAYhuHi5NjBwcGhFhEREc/WY+PmJjg5iiKOdnBwcAgIguJhdXR0
7OjYS/ESegkq3xekwUB4ecJPSNKz1XgRMwzD/uxv/6/QRTOCB+yAjbMj1kSD
CZ1Ap3M6ib6WdAq1PNpCzTVt0xsReYfY0lnUl3QOdXZ0nvN7usD7DnQRDY90
CZUnuow+z3QF9S50lf9RrqHDK13nvHIDvSk3NTvoXbmFPpTbqK/c0dzV3NPc
RwNlV7OIWv78Bs5DOcA=
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
/wP1++/q
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 33.}, {0, 1016.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Ticks\"", TraditionalForm], 
       FormBox["\"Publications\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, Method -> {}, PlotLabel -> 
     FormBox["\"R2: 0.999611\"", TraditionalForm], 
     PlotRange -> {{0, 33.}, {0, 1016.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Logistic model\"", "\"Results\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.695987321540473*^9, 3.69598796009873*^9, 3.695988530612331*^9, {
   3.696103434783105*^9, 3.696103438891479*^9}, {3.6961035087053337`*^9, 
   3.696103523984787*^9}, {3.696103645731916*^9, 3.696103648217065*^9}, {
   3.696103772232546*^9, 3.696103832569757*^9}, 3.6961038652457848`*^9, {
   3.6961044519674597`*^9, 3.6961044585811787`*^9}, 3.6961052509965687`*^9, {
   3.696515173915175*^9, 3.696515194276422*^9}, 3.696515237914805*^9, 
   3.6965153083787937`*^9, {3.696515381207637*^9, 3.696515387397107*^9}, 
   3.698546409125594*^9, 3.698546453992484*^9, 3.6985466317823353`*^9, 
   3.698546756158476*^9, 3.6985467869785633`*^9, 3.6985468410367804`*^9, {
   3.698547867757518*^9, 3.698547887322921*^9}, 3.698547957250279*^9, 
   3.69854822575031*^9, {3.699847414510497*^9, 3.699847431731328*^9}, {
   3.699924626844795*^9, 3.6999246465926313`*^9}, 3.6999247744914303`*^9, 
   3.699924870263088*^9, 3.6999249121808777`*^9}]
}, Open  ]]
},
WindowSize->{1364, 716},
WindowMargins->{{-9, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3447, 80, 209, "Input"],
Cell[4030, 104, 2269, 46, 70, "Output"],
Cell[6302, 152, 995, 14, 32, "Output"],
Cell[7300, 168, 17441, 332, 555, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
